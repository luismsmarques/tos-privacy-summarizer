#!/bin/bash
# Script para verificar o novo indicador de status

echo "=== VERIFICA√á√ÉO DO INDICADOR DE STATUS ==="

echo "1. Verificando se status-indicator existe no HTML..."
if grep -q "status-indicator" popup.html; then
    echo "‚úÖ status-indicator encontrado"
else
    echo "‚ùå status-indicator n√£o encontrado"
fi

echo ""
echo "2. Verificando se o CSS dos estados existe..."
states=("status-ready" "status-warning" "status-error" "status-configuring")
for state in "${states[@]}"; do
    if grep -q "\.$state" popup.html; then
        echo "‚úÖ CSS .$state encontrado"
    else
        echo "‚ùå CSS .$state n√£o encontrado"
    fi
done

echo ""
echo "3. Verificando se as fun√ß√µes JavaScript existem..."
functions=("updateStatusIndicator" "updateStatusProcessing" "restoreStatus")
for func in "${functions[@]}"; do
    if grep -q "function $func" popup.js; then
        echo "‚úÖ Fun√ß√£o $func encontrada"
    else
        echo "‚ùå Fun√ß√£o $func n√£o encontrada"
    fi
done

echo ""
echo "4. Verificando √≠cones de status..."
icons=("check_circle" "waving_hand" "key_off" "sync")
for icon in "${icons[@]}"; do
    if grep -q "$icon" popup.js; then
        echo "‚úÖ √çcone $icon encontrado"
    else
        echo "‚ùå √çcone $icon n√£o encontrado"
    fi
done

echo ""
echo "=== VERIFICA√á√ÉO CONCLU√çDA ==="
echo ""
echo "Estados do indicador:"
echo "- üü¢ status-ready: Extens√£o configurada (check_circle)"
echo "- üü° status-warning: Onboarding n√£o completado (waving_hand)"
echo "- üî¥ status-error: API key n√£o configurada (key_off)"
echo "- üîµ status-configuring: Processando (sync com anima√ß√£o)"
echo ""
echo "Recarregue a extens√£o para ver o novo indicador de status!"
